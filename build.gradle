plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.3'
	id 'io.spring.dependency-management' version '1.1.3'
	id 'jacoco'
	id "org.sonarqube" version "4.2.1.3168"
	id "org.flywaydb.flyway" version '8.0.0'


}
sonar {
	properties {
		property "sonar.java.coveragePlugin", "jacoco"
		property "sonar.projectKey", "I482269_pawsicarebe-s3_AYu4pdKx0upfW3vBJKqZ"
		property "sonar.token", "sqp_f3c5e46ff4cc403abc12bf97716df8b47a755fa9"
		property "sonar.host.url", "http://localhost:9002/"
		property "sonar.projectName", "PawsiCareBE S3 "
		property "sonar.qualitygate.wait", true

	}
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

def applicationPropertiesFile = file('src/main/resources/application.properties')

if (applicationPropertiesFile.exists()) {
	def properties = new Properties()
	applicationPropertiesFile.withInputStream { inputStream ->
		properties.load(inputStream)
	}

	flyway {
		url = 'jdbc:mysql://127.0.0.1:3306/pawsicare'
		driver = 'com.mysql.cj.jdbc.Driver'
		user = 'nikol'
		password = 'Ior7dh8Nrr'
		baselineOnMigrate = true
	}
} else {
	throw new GradleException("application.properties file not found!")
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-mail'
    implementation 'org.jetbrains:annotations:24.0.0'
	implementation 'org.flywaydb:flyway-core'
	implementation 'mysql:mysql-connector-java:8.0.23'
	implementation 'org.flywaydb:flyway-mysql:8.4.4'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation "org.mockito:mockito-core:3.+"
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.cloud:spring-cloud-starter-bootstrap:4.0.4'
	testImplementation 'com.playtika.testcontainers:embedded-mysql:3.0.0-RC9'


}

jacoco {
	toolVersion = "0.8.9"
	reportsDirectory = layout.buildDirectory.dir('customJacocoReportDir')
}

jacocoTestReport {
	dependsOn test
		reports {
			xml.required = false
			csv.required = false
			html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
		}
	}

tasks.named('test') {
	useJUnitPlatform()
	finalizedBy jacocoTestReport
}
